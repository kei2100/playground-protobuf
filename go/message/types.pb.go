// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/message/types.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Types_Enum int32

const (
	Types_ENUM_UNKNOWN Types_Enum = 0
	Types_ENUM_FOO     Types_Enum = 1
)

var Types_Enum_name = map[int32]string{
	0: "ENUM_UNKNOWN",
	1: "ENUM_FOO",
}

var Types_Enum_value = map[string]int32{
	"ENUM_UNKNOWN": 0,
	"ENUM_FOO":     1,
}

func (x Types_Enum) String() string {
	return proto.EnumName(Types_Enum_name, int32(x))
}

func (Types_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c86c08eb4ed5ae4, []int{0, 0}
}

type Types struct {
	Float64  float64 `protobuf:"fixed64,1,opt,name=float64,proto3" json:"float64,omitempty"`
	Float32  float32 `protobuf:"fixed32,2,opt,name=float32,proto3" json:"float32,omitempty"`
	Int32    int32   `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64   `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32  `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64  `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32   `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64   `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32  `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64  `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32   `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64   `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     bool    `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_  string  `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	//  string string_ = 27; // The JSON camel-case name of field "string_" conflicts with field "string". This is not allowed in proto3.
	Bytes    []byte        `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	WillMask string        `protobuf:"bytes,27,opt,name=will_mask,json=willMask,proto3" json:"will_mask,omitempty"`
	Enum     Types_Enum    `protobuf:"varint,16,opt,name=enum,proto3,enum=github.com.kei2100.playground_protobuf.message.Types_Enum" json:"enum,omitempty"`
	Nested   *Types_Nested `protobuf:"bytes,17,opt,name=nested,proto3" json:"nested,omitempty"`
	// Types that are valid to be assigned to Oneof:
	//	*Types_OneofString
	//	*Types_OneofInt32
	Oneof                isTypes_Oneof           `protobuf_oneof:"oneof"`
	StringList           []string                `protobuf:"bytes,20,rep,name=string_list,json=stringList,proto3" json:"string_list,omitempty"`
	StringStringMap      map[string]string       `protobuf:"bytes,21,rep,name=string_string_map,json=stringStringMap,proto3" json:"string_string_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Int32StringMap       map[int32]string        `protobuf:"bytes,22,rep,name=int32_string_map,json=int32StringMap,proto3" json:"int32_string_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Int64StringMap       map[int64]string        `protobuf:"bytes,23,rep,name=int64_string_map,json=int64StringMap,proto3" json:"int64_string_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Int64Int64Map        map[int64]int64         `protobuf:"bytes,24,rep,name=int64_int64_map,json=int64Int64Map,proto3" json:"int64_int64_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StringMessageMap     map[int64]*Types_Nested `protobuf:"bytes,25,rep,name=string_message_map,json=stringMessageMap,proto3" json:"string_message_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Any                  *any.Any                `protobuf:"bytes,26,opt,name=any,proto3" json:"any,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Types) Reset()         { *m = Types{} }
func (m *Types) String() string { return proto.CompactTextString(m) }
func (*Types) ProtoMessage()    {}
func (*Types) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c86c08eb4ed5ae4, []int{0}
}

func (m *Types) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types.Unmarshal(m, b)
}
func (m *Types) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types.Marshal(b, m, deterministic)
}
func (m *Types) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types.Merge(m, src)
}
func (m *Types) XXX_Size() int {
	return xxx_messageInfo_Types.Size(m)
}
func (m *Types) XXX_DiscardUnknown() {
	xxx_messageInfo_Types.DiscardUnknown(m)
}

var xxx_messageInfo_Types proto.InternalMessageInfo

func (m *Types) GetFloat64() float64 {
	if m != nil {
		return m.Float64
	}
	return 0
}

func (m *Types) GetFloat32() float32 {
	if m != nil {
		return m.Float32
	}
	return 0
}

func (m *Types) GetInt32() int32 {
	if m != nil {
		return m.Int32
	}
	return 0
}

func (m *Types) GetInt64() int64 {
	if m != nil {
		return m.Int64
	}
	return 0
}

func (m *Types) GetUint32() uint32 {
	if m != nil {
		return m.Uint32
	}
	return 0
}

func (m *Types) GetUint64() uint64 {
	if m != nil {
		return m.Uint64
	}
	return 0
}

func (m *Types) GetSint32() int32 {
	if m != nil {
		return m.Sint32
	}
	return 0
}

func (m *Types) GetSint64() int64 {
	if m != nil {
		return m.Sint64
	}
	return 0
}

func (m *Types) GetFixed32() uint32 {
	if m != nil {
		return m.Fixed32
	}
	return 0
}

func (m *Types) GetFixed64() uint64 {
	if m != nil {
		return m.Fixed64
	}
	return 0
}

func (m *Types) GetSfixed32() int32 {
	if m != nil {
		return m.Sfixed32
	}
	return 0
}

func (m *Types) GetSfixed64() int64 {
	if m != nil {
		return m.Sfixed64
	}
	return 0
}

func (m *Types) GetBool() bool {
	if m != nil {
		return m.Bool
	}
	return false
}

func (m *Types) GetString_() string {
	if m != nil {
		return m.String_
	}
	return ""
}

func (m *Types) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *Types) GetWillMask() string {
	if m != nil {
		return m.WillMask
	}
	return ""
}

func (m *Types) GetEnum() Types_Enum {
	if m != nil {
		return m.Enum
	}
	return Types_ENUM_UNKNOWN
}

func (m *Types) GetNested() *Types_Nested {
	if m != nil {
		return m.Nested
	}
	return nil
}

type isTypes_Oneof interface {
	isTypes_Oneof()
}

type Types_OneofString struct {
	OneofString string `protobuf:"bytes,18,opt,name=oneof_string,json=oneofString,proto3,oneof"`
}

type Types_OneofInt32 struct {
	OneofInt32 int32 `protobuf:"varint,19,opt,name=oneof_int32,json=oneofInt32,proto3,oneof"`
}

func (*Types_OneofString) isTypes_Oneof() {}

func (*Types_OneofInt32) isTypes_Oneof() {}

func (m *Types) GetOneof() isTypes_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *Types) GetOneofString() string {
	if x, ok := m.GetOneof().(*Types_OneofString); ok {
		return x.OneofString
	}
	return ""
}

func (m *Types) GetOneofInt32() int32 {
	if x, ok := m.GetOneof().(*Types_OneofInt32); ok {
		return x.OneofInt32
	}
	return 0
}

func (m *Types) GetStringList() []string {
	if m != nil {
		return m.StringList
	}
	return nil
}

func (m *Types) GetStringStringMap() map[string]string {
	if m != nil {
		return m.StringStringMap
	}
	return nil
}

func (m *Types) GetInt32StringMap() map[int32]string {
	if m != nil {
		return m.Int32StringMap
	}
	return nil
}

func (m *Types) GetInt64StringMap() map[int64]string {
	if m != nil {
		return m.Int64StringMap
	}
	return nil
}

func (m *Types) GetInt64Int64Map() map[int64]int64 {
	if m != nil {
		return m.Int64Int64Map
	}
	return nil
}

func (m *Types) GetStringMessageMap() map[int64]*Types_Nested {
	if m != nil {
		return m.StringMessageMap
	}
	return nil
}

func (m *Types) GetAny() *any.Any {
	if m != nil {
		return m.Any
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Types) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Types_OneofString)(nil),
		(*Types_OneofInt32)(nil),
	}
}

type Types_Nested struct {
	NestedString         string   `protobuf:"bytes,1,opt,name=nested_string,json=nestedString,proto3" json:"nested_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Types_Nested) Reset()         { *m = Types_Nested{} }
func (m *Types_Nested) String() string { return proto.CompactTextString(m) }
func (*Types_Nested) ProtoMessage()    {}
func (*Types_Nested) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c86c08eb4ed5ae4, []int{0, 0}
}

func (m *Types_Nested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Types_Nested.Unmarshal(m, b)
}
func (m *Types_Nested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Types_Nested.Marshal(b, m, deterministic)
}
func (m *Types_Nested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Types_Nested.Merge(m, src)
}
func (m *Types_Nested) XXX_Size() int {
	return xxx_messageInfo_Types_Nested.Size(m)
}
func (m *Types_Nested) XXX_DiscardUnknown() {
	xxx_messageInfo_Types_Nested.DiscardUnknown(m)
}

var xxx_messageInfo_Types_Nested proto.InternalMessageInfo

func (m *Types_Nested) GetNestedString() string {
	if m != nil {
		return m.NestedString
	}
	return ""
}

func init() {
	proto.RegisterEnum("github.com.kei2100.playground_protobuf.message.Types_Enum", Types_Enum_name, Types_Enum_value)
	proto.RegisterType((*Types)(nil), "github.com.kei2100.playground_protobuf.message.Types")
	proto.RegisterMapType((map[int32]string)(nil), "github.com.kei2100.playground_protobuf.message.Types.Int32StringMapEntry")
	proto.RegisterMapType((map[int64]int64)(nil), "github.com.kei2100.playground_protobuf.message.Types.Int64Int64MapEntry")
	proto.RegisterMapType((map[int64]string)(nil), "github.com.kei2100.playground_protobuf.message.Types.Int64StringMapEntry")
	proto.RegisterMapType((map[int64]*Types_Nested)(nil), "github.com.kei2100.playground_protobuf.message.Types.StringMessageMapEntry")
	proto.RegisterMapType((map[string]string)(nil), "github.com.kei2100.playground_protobuf.message.Types.StringStringMapEntry")
	proto.RegisterType((*Types_Nested)(nil), "github.com.kei2100.playground_protobuf.message.Types.Nested")
}

func init() { proto.RegisterFile("proto/message/types.proto", fileDescriptor_5c86c08eb4ed5ae4) }

var fileDescriptor_5c86c08eb4ed5ae4 = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x4f, 0xdb, 0x4a,
	0x14, 0x65, 0x70, 0x3e, 0x6f, 0xbe, 0xcc, 0x10, 0x78, 0x43, 0x58, 0xbc, 0x79, 0x3c, 0x09, 0xcd,
	0x06, 0x07, 0x12, 0xcb, 0x7a, 0x42, 0x6f, 0x51, 0x90, 0xa8, 0xa0, 0x34, 0x41, 0x9a, 0x82, 0x2a,
	0x75, 0x13, 0x39, 0xc5, 0xa4, 0x56, 0x1c, 0x3b, 0x8a, 0x6d, 0x5a, 0x2f, 0xbb, 0xeb, 0xcf, 0xae,
	0x3c, 0x63, 0x3b, 0x86, 0x46, 0xa2, 0x25, 0x9b, 0x89, 0xcf, 0x99, 0x99, 0x73, 0xee, 0xcd, 0xbd,
	0xbe, 0x86, 0xbd, 0xf9, 0xc2, 0x0b, 0xbc, 0xee, 0xcc, 0xf2, 0x7d, 0x73, 0x62, 0x75, 0x83, 0x68,
	0x6e, 0xf9, 0x9a, 0xe0, 0xb0, 0x36, 0xb1, 0x83, 0x2f, 0xe1, 0x58, 0xfb, 0xec, 0xcd, 0xb4, 0xa9,
	0x65, 0xf7, 0x4e, 0x8e, 0x8f, 0xb5, 0xb9, 0x63, 0x46, 0x93, 0x85, 0x17, 0xba, 0xf7, 0x23, 0x71,
	0x68, 0x1c, 0x3e, 0x68, 0xc9, 0xdd, 0xce, 0xde, 0xc4, 0xf3, 0x26, 0x8e, 0xd5, 0x4d, 0x37, 0xba,
	0xa6, 0x1b, 0x49, 0xa9, 0x83, 0x1f, 0x4d, 0x28, 0xde, 0xc6, 0xd2, 0x98, 0x40, 0xf9, 0xc1, 0xf1,
	0xcc, 0xc0, 0xd0, 0x09, 0xa2, 0x88, 0x21, 0x9e, 0xc2, 0x6c, 0xa7, 0xdf, 0x23, 0x9b, 0x14, 0xb1,
	0x4d, 0x9e, 0x42, 0xdc, 0x86, 0xa2, 0xed, 0xc6, 0xbc, 0x42, 0x11, 0x2b, 0x72, 0x09, 0x12, 0xd6,
	0xd0, 0x49, 0x81, 0x22, 0xa6, 0x70, 0x09, 0xf0, 0x2e, 0x94, 0x42, 0x79, 0xb8, 0x48, 0x11, 0x6b,
	0xf0, 0x04, 0xa5, 0xbc, 0xa1, 0x93, 0x12, 0x45, 0xac, 0xc0, 0x13, 0x14, 0xf3, 0xbe, 0x3c, 0x5f,
	0xa6, 0x88, 0x6d, 0xf1, 0x04, 0xa5, 0xbc, 0xa1, 0x93, 0x0a, 0x45, 0x0c, 0xf3, 0x04, 0x89, 0x28,
	0xed, 0x6f, 0xd6, 0x7d, 0xbf, 0x47, 0xaa, 0x14, 0xb1, 0x32, 0x4f, 0x61, 0xb6, 0x63, 0xe8, 0x04,
	0x28, 0x62, 0x25, 0x9e, 0x42, 0xdc, 0x81, 0x8a, 0x9f, 0x5e, 0xaa, 0x51, 0xc4, 0x5a, 0x3c, 0xc3,
	0xcb, 0x3d, 0x43, 0x27, 0x75, 0x8a, 0x98, 0xca, 0x33, 0x8c, 0x31, 0x14, 0xc6, 0x9e, 0xe7, 0x90,
	0x06, 0x45, 0xac, 0xc2, 0xc5, 0xb3, 0x88, 0x2b, 0x58, 0xd8, 0xee, 0x84, 0x34, 0x29, 0x62, 0x55,
	0x9e, 0xa0, 0xf8, 0xdf, 0x18, 0x47, 0x81, 0xe5, 0x93, 0x16, 0x45, 0xac, 0xce, 0x25, 0xc0, 0xfb,
	0x50, 0xfd, 0x6a, 0x3b, 0xce, 0x68, 0x66, 0xfa, 0x53, 0xb2, 0x2f, 0x2e, 0x54, 0x62, 0x62, 0x60,
	0xfa, 0x53, 0x3c, 0x84, 0x82, 0xe5, 0x86, 0x33, 0xa2, 0x52, 0xc4, 0x9a, 0xbd, 0xd3, 0x3f, 0x2c,
	0xb7, 0x26, 0xea, 0xa9, 0x5d, 0xb8, 0xe1, 0x8c, 0x0b, 0x1d, 0x7c, 0x0b, 0x25, 0xd7, 0xf2, 0x03,
	0xeb, 0x9e, 0x6c, 0x51, 0xc4, 0x6a, 0xbd, 0xff, 0x5f, 0xa7, 0x38, 0x14, 0x1a, 0x3c, 0xd1, 0xc2,
	0xff, 0x42, 0xdd, 0x73, 0x2d, 0xef, 0x61, 0x94, 0xa4, 0x8d, 0xe3, 0x2c, 0x2e, 0x37, 0x78, 0x4d,
	0xb0, 0x1f, 0x64, 0xf6, 0xff, 0x80, 0x84, 0x23, 0x59, 0xca, 0xed, 0xb8, 0x4f, 0x2e, 0x37, 0x38,
	0x08, 0xf2, 0x4a, 0x14, 0xf4, 0x6f, 0xa8, 0x49, 0x85, 0x91, 0x63, 0xfb, 0x01, 0x69, 0x53, 0x85,
	0x55, 0x39, 0x48, 0xea, 0xbd, 0xed, 0x07, 0xf8, 0x11, 0xb6, 0x92, 0x03, 0xc9, 0xcf, 0xcc, 0x9c,
	0x93, 0x1d, 0xaa, 0xb0, 0x5a, 0xef, 0xdd, 0xeb, 0x32, 0x91, 0xc1, 0xc9, 0x75, 0x60, 0xce, 0x2f,
	0xdc, 0x60, 0x11, 0xf1, 0x96, 0xff, 0x94, 0xc5, 0x3e, 0xa8, 0x22, 0xea, 0xbc, 0xed, 0xae, 0xb0,
	0xbd, 0x7a, 0x9d, 0xad, 0xc8, 0xf7, 0x99, 0x6b, 0xd3, 0x7e, 0x42, 0x26, 0xa6, 0x86, 0x9e, 0x37,
	0xfd, 0x6b, 0x4d, 0x53, 0x43, 0x5f, 0x61, 0x9a, 0x23, 0xf1, 0x1c, 0x5a, 0xd2, 0x54, 0xae, 0xb1,
	0x27, 0x11, 0x9e, 0x97, 0x6b, 0x78, 0x8a, 0x25, 0xb3, 0x6c, 0xd8, 0x79, 0x0e, 0x47, 0x80, 0xd3,
	0x04, 0xe5, 0x4d, 0x61, 0xba, 0x27, 0x4c, 0xaf, 0xd7, 0x29, 0xea, 0x40, 0x72, 0x99, 0xaf, 0xea,
	0x3f, 0xa3, 0xf1, 0x21, 0x28, 0xa6, 0x1b, 0x91, 0x8e, 0x78, 0x15, 0xda, 0x9a, 0x9c, 0x8d, 0x5a,
	0x26, 0x7a, 0xe6, 0x46, 0x3c, 0x3e, 0xd0, 0x39, 0x82, 0xd2, 0x30, 0xed, 0xf4, 0x86, 0xec, 0xf9,
	0xb4, 0xd5, 0x91, 0x78, 0x61, 0xeb, 0x92, 0x94, 0xbe, 0x9d, 0x73, 0x68, 0xaf, 0x6a, 0x2b, 0xac,
	0x82, 0x32, 0xb5, 0xa2, 0xe4, 0x4a, 0xfc, 0x18, 0x4f, 0x84, 0x47, 0xd3, 0x09, 0x2d, 0x31, 0x4d,
	0xab, 0x5c, 0x82, 0xd3, 0xcd, 0xff, 0x50, 0xe7, 0x0c, 0xb6, 0x57, 0xf4, 0x48, 0x5e, 0xa2, 0xf8,
	0x7b, 0x12, 0xcf, 0x2b, 0x9e, 0x97, 0x50, 0x5e, 0x92, 0x78, 0x03, 0xf8, 0xd7, 0x02, 0xbe, 0xa4,
	0xa0, 0xe4, 0x15, 0xbe, 0x23, 0xd8, 0x59, 0x59, 0x8e, 0x15, 0x2a, 0x3c, 0xaf, 0xb2, 0xee, 0x6c,
	0x5a, 0xc6, 0x70, 0x70, 0x08, 0x85, 0x78, 0x04, 0x62, 0x15, 0xea, 0x17, 0xc3, 0xbb, 0xc1, 0xe8,
	0x6e, 0x78, 0x3d, 0xbc, 0xf9, 0x38, 0x54, 0x37, 0x70, 0x1d, 0x2a, 0x82, 0x79, 0x7b, 0x73, 0xa3,
	0xa2, 0xf3, 0x32, 0x14, 0xc5, 0x30, 0x3a, 0xef, 0x7f, 0x3a, 0x59, 0x5a, 0x77, 0x13, 0xeb, 0xee,
	0xd2, 0xfa, 0x28, 0xfb, 0x7c, 0x4e, 0xb2, 0xcf, 0xf2, 0xb8, 0x24, 0xc8, 0xfe, 0xcf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xde, 0x44, 0xd1, 0xf9, 0xae, 0x07, 0x00, 0x00,
}
